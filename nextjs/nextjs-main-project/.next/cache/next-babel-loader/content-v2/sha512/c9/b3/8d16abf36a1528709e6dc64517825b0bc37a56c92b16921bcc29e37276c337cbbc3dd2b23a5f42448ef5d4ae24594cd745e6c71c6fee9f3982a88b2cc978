{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React\\\\React Projects\\\\nextjs\\\\nextjs-main-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://readWriteAnyDatabase:2DVvOYM0stj3VM9k@cluster0.ie8i8.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://readWriteAnyDatabase:2DVvOYM0stj3VM9k@cluster0.ie8i8.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/React/React Projects/nextjs/nextjs-main-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAoBC,QAApB,QAAmC,SAAnC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAAtC;AACH,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADrB;AAEH,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAFvB;AAGH,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAH3B;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAC,MAAMV,WAAW,CAACW,OAAZ,CAAoB,oHAApB,CAAnB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AAEA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AAEA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,EAAoCC,OAApC,EAApB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFJ,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAACG,OAAO,CAACJ,MAAR,CAAeC,QAA9B;AAEA,QAAMf,MAAM,GAAC,MAAMV,WAAW,CAACW,OAAZ,CAAoB,oHAApB,CAAnB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AAEA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AAEA,QAAMe,cAAc,GAAC,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEhB,QAAQ,CAACwB,QAAD;AAAd,GAA1B,CAA3B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFd;AAGRC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHhB;AAIRF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJd;AAKRG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALpB;AADT;AADJ,GAAP;AAWH;AAED,eAAeN,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient,ObjectId} from \"mongodb\";\r\n\r\nfunction MeetupDetails(props) {\r\n    return <MeetupDetail image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description} />;\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client=await MongoClient.connect('mongodb+srv://readWriteAnyDatabase:2DVvOYM0stj3VM9k@cluster0.ie8i8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db=client.db();\r\n\r\n    const meetupsCollection=db.collection('meetups');\r\n\r\n    const meetups=await meetupsCollection.find({},{_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId=context.params.meetupId;\r\n\r\n    const client=await MongoClient.connect('mongodb+srv://readWriteAnyDatabase:2DVvOYM0stj3VM9k@cluster0.ie8i8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db=client.db();\r\n\r\n    const meetupsCollection=db.collection('meetups');\r\n\r\n    const selectedMeetup=await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}